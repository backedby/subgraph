// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DeployedSubscription extends ethereum.Event {
  get params(): DeployedSubscription__Params {
    return new DeployedSubscription__Params(this);
  }
}

export class DeployedSubscription__Params {
  _event: DeployedSubscription;

  constructor(event: DeployedSubscription) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deployedAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EditContribution extends ethereum.Event {
  get params(): EditContribution__Params {
    return new EditContribution__Params(this);
  }
}

export class EditContribution__Params {
  _event: EditContribution;

  constructor(event: EditContribution) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get contribution(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewSubscriptionProfile extends ethereum.Event {
  get params(): NewSubscriptionProfile__Params {
    return new NewSubscriptionProfile__Params(this);
  }
}

export class NewSubscriptionProfile__Params {
  _event: NewSubscriptionProfile;

  constructor(event: NewSubscriptionProfile) {
    this._event = event;
  }

  get profileId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tierSetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get contribution(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BBSubscriptionFactory__getContributionBoundsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class BBSubscriptionFactory__getSubscriptionProfileResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class BBSubscriptionFactory extends ethereum.SmartContract {
  static bind(address: Address): BBSubscriptionFactory {
    return new BBSubscriptionFactory("BBSubscriptionFactory", address);
  }

  deploySubscriptions(currency: Address): Address {
    let result = super.call(
      "deploySubscriptions",
      "deploySubscriptions(address):(address)",
      [ethereum.Value.fromAddress(currency)]
    );

    return result[0].toAddress();
  }

  try_deploySubscriptions(currency: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deploySubscriptions",
      "deploySubscriptions(address):(address)",
      [ethereum.Value.fromAddress(currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getContributionBounds(): BBSubscriptionFactory__getContributionBoundsResult {
    let result = super.call(
      "getContributionBounds",
      "getContributionBounds():(uint256,uint256)",
      []
    );

    return new BBSubscriptionFactory__getContributionBoundsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getContributionBounds(): ethereum.CallResult<
    BBSubscriptionFactory__getContributionBoundsResult
  > {
    let result = super.tryCall(
      "getContributionBounds",
      "getContributionBounds():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BBSubscriptionFactory__getContributionBoundsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getDeployedSubscriptions(currency: Address): Address {
    let result = super.call(
      "getDeployedSubscriptions",
      "getDeployedSubscriptions(address):(address)",
      [ethereum.Value.fromAddress(currency)]
    );

    return result[0].toAddress();
  }

  try_getDeployedSubscriptions(
    currency: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDeployedSubscriptions",
      "getDeployedSubscriptions(address):(address)",
      [ethereum.Value.fromAddress(currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGasOracle(): Address {
    let result = super.call("getGasOracle", "getGasOracle():(address)", []);

    return result[0].toAddress();
  }

  try_getGasOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("getGasOracle", "getGasOracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGasOracleOwner(): Address {
    let result = super.call(
      "getGasOracleOwner",
      "getGasOracleOwner():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getGasOracleOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getGasOracleOwner",
      "getGasOracleOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGracePeriod(): BigInt {
    let result = super.call("getGracePeriod", "getGracePeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getGracePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGracePeriod",
      "getGracePeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubscriptionCurrency(
    profileId: BigInt,
    tierId: BigInt,
    account: Address
  ): Address {
    let result = super.call(
      "getSubscriptionCurrency",
      "getSubscriptionCurrency(uint256,uint256,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(tierId),
        ethereum.Value.fromAddress(account)
      ]
    );

    return result[0].toAddress();
  }

  try_getSubscriptionCurrency(
    profileId: BigInt,
    tierId: BigInt,
    account: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSubscriptionCurrency",
      "getSubscriptionCurrency(uint256,uint256,address):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(tierId),
        ethereum.Value.fromAddress(account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSubscriptionFee(currency: Address): BigInt {
    let result = super.call(
      "getSubscriptionFee",
      "getSubscriptionFee(address):(uint256)",
      [ethereum.Value.fromAddress(currency)]
    );

    return result[0].toBigInt();
  }

  try_getSubscriptionFee(currency: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSubscriptionFee",
      "getSubscriptionFee(address):(uint256)",
      [ethereum.Value.fromAddress(currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubscriptionFeeOwner(): Address {
    let result = super.call(
      "getSubscriptionFeeOwner",
      "getSubscriptionFeeOwner():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSubscriptionFeeOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSubscriptionFeeOwner",
      "getSubscriptionFeeOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSubscriptionProfile(
    profileId: BigInt
  ): BBSubscriptionFactory__getSubscriptionProfileResult {
    let result = super.call(
      "getSubscriptionProfile",
      "getSubscriptionProfile(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return new BBSubscriptionFactory__getSubscriptionProfileResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getSubscriptionProfile(
    profileId: BigInt
  ): ethereum.CallResult<BBSubscriptionFactory__getSubscriptionProfileResult> {
    let result = super.tryCall(
      "getSubscriptionProfile",
      "getSubscriptionProfile(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BBSubscriptionFactory__getSubscriptionProfileResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getTreasury(): Address {
    let result = super.call("getTreasury", "getTreasury():(address)", []);

    return result[0].toAddress();
  }

  try_getTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("getTreasury", "getTreasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTreasuryOwner(): Address {
    let result = super.call(
      "getTreasuryOwner",
      "getTreasuryOwner():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getTreasuryOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTreasuryOwner",
      "getTreasuryOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isSubscriptionActive(
    profileId: BigInt,
    tierId: BigInt,
    account: Address
  ): boolean {
    let result = super.call(
      "isSubscriptionActive",
      "isSubscriptionActive(uint256,uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(tierId),
        ethereum.Value.fromAddress(account)
      ]
    );

    return result[0].toBoolean();
  }

  try_isSubscriptionActive(
    profileId: BigInt,
    tierId: BigInt,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSubscriptionActive",
      "isSubscriptionActive(uint256,uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(profileId),
        ethereum.Value.fromUnsignedBigInt(tierId),
        ethereum.Value.fromAddress(account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSubscriptionProfileCreated(profileId: BigInt): boolean {
    let result = super.call(
      "isSubscriptionProfileCreated",
      "isSubscriptionProfileCreated(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );

    return result[0].toBoolean();
  }

  try_isSubscriptionProfileCreated(
    profileId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSubscriptionProfileCreated",
      "isSubscriptionProfileCreated(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSubscriptionsDeployed(currency: Address): boolean {
    let result = super.call(
      "isSubscriptionsDeployed",
      "isSubscriptionsDeployed(address):(bool)",
      [ethereum.Value.fromAddress(currency)]
    );

    return result[0].toBoolean();
  }

  try_isSubscriptionsDeployed(currency: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSubscriptionsDeployed",
      "isSubscriptionsDeployed(address):(bool)",
      [ethereum.Value.fromAddress(currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get bbProfiles(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get bbTiers(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get treasury(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateSubscriptionProfileCall extends ethereum.Call {
  get inputs(): CreateSubscriptionProfileCall__Inputs {
    return new CreateSubscriptionProfileCall__Inputs(this);
  }

  get outputs(): CreateSubscriptionProfileCall__Outputs {
    return new CreateSubscriptionProfileCall__Outputs(this);
  }
}

export class CreateSubscriptionProfileCall__Inputs {
  _call: CreateSubscriptionProfileCall;

  constructor(call: CreateSubscriptionProfileCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tierSetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get contribution(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateSubscriptionProfileCall__Outputs {
  _call: CreateSubscriptionProfileCall;

  constructor(call: CreateSubscriptionProfileCall) {
    this._call = call;
  }
}

export class DeploySubscriptionsCall extends ethereum.Call {
  get inputs(): DeploySubscriptionsCall__Inputs {
    return new DeploySubscriptionsCall__Inputs(this);
  }

  get outputs(): DeploySubscriptionsCall__Outputs {
    return new DeploySubscriptionsCall__Outputs(this);
  }
}

export class DeploySubscriptionsCall__Inputs {
  _call: DeploySubscriptionsCall;

  constructor(call: DeploySubscriptionsCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeploySubscriptionsCall__Outputs {
  _call: DeploySubscriptionsCall;

  constructor(call: DeploySubscriptionsCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetContributionCall extends ethereum.Call {
  get inputs(): SetContributionCall__Inputs {
    return new SetContributionCall__Inputs(this);
  }

  get outputs(): SetContributionCall__Outputs {
    return new SetContributionCall__Outputs(this);
  }
}

export class SetContributionCall__Inputs {
  _call: SetContributionCall;

  constructor(call: SetContributionCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get contribution(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetContributionCall__Outputs {
  _call: SetContributionCall;

  constructor(call: SetContributionCall) {
    this._call = call;
  }
}

export class SetGasOracleCall extends ethereum.Call {
  get inputs(): SetGasOracleCall__Inputs {
    return new SetGasOracleCall__Inputs(this);
  }

  get outputs(): SetGasOracleCall__Outputs {
    return new SetGasOracleCall__Outputs(this);
  }
}

export class SetGasOracleCall__Inputs {
  _call: SetGasOracleCall;

  constructor(call: SetGasOracleCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGasOracleCall__Outputs {
  _call: SetGasOracleCall;

  constructor(call: SetGasOracleCall) {
    this._call = call;
  }
}

export class SetGasOracleOwnerCall extends ethereum.Call {
  get inputs(): SetGasOracleOwnerCall__Inputs {
    return new SetGasOracleOwnerCall__Inputs(this);
  }

  get outputs(): SetGasOracleOwnerCall__Outputs {
    return new SetGasOracleOwnerCall__Outputs(this);
  }
}

export class SetGasOracleOwnerCall__Inputs {
  _call: SetGasOracleOwnerCall;

  constructor(call: SetGasOracleOwnerCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGasOracleOwnerCall__Outputs {
  _call: SetGasOracleOwnerCall;

  constructor(call: SetGasOracleOwnerCall) {
    this._call = call;
  }
}

export class SetSubscriptionCurrencyCall extends ethereum.Call {
  get inputs(): SetSubscriptionCurrencyCall__Inputs {
    return new SetSubscriptionCurrencyCall__Inputs(this);
  }

  get outputs(): SetSubscriptionCurrencyCall__Outputs {
    return new SetSubscriptionCurrencyCall__Outputs(this);
  }
}

export class SetSubscriptionCurrencyCall__Inputs {
  _call: SetSubscriptionCurrencyCall;

  constructor(call: SetSubscriptionCurrencyCall) {
    this._call = call;
  }

  get profileId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tierId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get account(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get currency(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class SetSubscriptionCurrencyCall__Outputs {
  _call: SetSubscriptionCurrencyCall;

  constructor(call: SetSubscriptionCurrencyCall) {
    this._call = call;
  }
}

export class SetSubscriptionFeeCall extends ethereum.Call {
  get inputs(): SetSubscriptionFeeCall__Inputs {
    return new SetSubscriptionFeeCall__Inputs(this);
  }

  get outputs(): SetSubscriptionFeeCall__Outputs {
    return new SetSubscriptionFeeCall__Outputs(this);
  }
}

export class SetSubscriptionFeeCall__Inputs {
  _call: SetSubscriptionFeeCall;

  constructor(call: SetSubscriptionFeeCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetSubscriptionFeeCall__Outputs {
  _call: SetSubscriptionFeeCall;

  constructor(call: SetSubscriptionFeeCall) {
    this._call = call;
  }
}

export class SetSubscriptionFeeOwnerCall extends ethereum.Call {
  get inputs(): SetSubscriptionFeeOwnerCall__Inputs {
    return new SetSubscriptionFeeOwnerCall__Inputs(this);
  }

  get outputs(): SetSubscriptionFeeOwnerCall__Outputs {
    return new SetSubscriptionFeeOwnerCall__Outputs(this);
  }
}

export class SetSubscriptionFeeOwnerCall__Inputs {
  _call: SetSubscriptionFeeOwnerCall;

  constructor(call: SetSubscriptionFeeOwnerCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSubscriptionFeeOwnerCall__Outputs {
  _call: SetSubscriptionFeeOwnerCall;

  constructor(call: SetSubscriptionFeeOwnerCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetTreasuryOwnerCall extends ethereum.Call {
  get inputs(): SetTreasuryOwnerCall__Inputs {
    return new SetTreasuryOwnerCall__Inputs(this);
  }

  get outputs(): SetTreasuryOwnerCall__Outputs {
    return new SetTreasuryOwnerCall__Outputs(this);
  }
}

export class SetTreasuryOwnerCall__Inputs {
  _call: SetTreasuryOwnerCall;

  constructor(call: SetTreasuryOwnerCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryOwnerCall__Outputs {
  _call: SetTreasuryOwnerCall;

  constructor(call: SetTreasuryOwnerCall) {
    this._call = call;
  }
}
